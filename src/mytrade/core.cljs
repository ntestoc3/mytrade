(ns mytrade.core
  (:require
   [reagent.core :as reagent :refer [atom]]
   [reagent.dom :as rdom]
   [reagent.session :as session]
   [reitit.frontend :as reitit]
   [mytrade.charts :refer [stock]]
   [clerk.core :as clerk]
   [accountant.core :as accountant]))

;; -------------------------
;; Routes

(def router
  (reitit/router
   [["/" :index]
    ["/items"
     ["" :items]
     ["/:item-id" :item]]
    ["/about" :about]]))

(defn path-for [route & [params]]
  (if params
    (:path (reitit/match-by-name router route params))
    (:path (reitit/match-by-name router route))))

;; -------------------------
;; Page components

(defn home-page []
  (fn []
    [:span.main
     [:h1 "Welcome to vtrade"]
     [:ul
      [:li [:a {:href (path-for :items)} "Items of vtrade"]]
      [:li [:a {:href "/broken/link"} "Broken link"]]]]))


(defn pingan-chart
  []
  [stock
   {:chart-data {:rangeSelector {:selected 2},
                 :title {:text "平安银行历史股价"},
                 :plotOptions {:series {:showInLegend true}},
                 :tooltip {:split false, :shared true},
                 :series [{:id "000001",
                           :name "平安银行",
                           :data [[1416182400000,7.204,7.232,7.037,7.072,889594.5],[1416268800000,7.058,7.107,6.933,6.968,930296.44],[1416355200000,6.961,7.003,6.92,6.982,591656.75],[1416441600000,6.947,7.024,6.891,6.982,683544.62],[1416528000000,6.975,7.141,6.891,7.1,1146732],[1416787200000,6.968,7.204,6.905,7.086,2227368.5],[1416873600000,7.065,7.253,7.024,7.225,1567802.62],[1416960000000,7.232,7.495,7.183,7.385,2184918.75],[1417046400000,7.482,7.593,7.322,7.454,2103856.75],[1417132800000,7.426,8.239,7.364,8.239,4844839.5],[1417392000000,8.35,8.655,8.037,8.065,4465213.5],[1417478400000,8.03,8.905,7.989,8.711,3490411.5],[1417564800000,8.711,9.245,8.426,8.697,3997530],[1417651200000,8.725,9.301,8.558,9.295,3450180.75],[1417737600000,9.357,10.176,8.989,9.69,4413697],[1417996800000,9.468,10.364,9.322,10.176,3928342.5],[1418083200000,9.989,10.385,9.12,9.12,4045420],[1418169600000,9.045,9.572,8.641,9.454,3527844.25],[1418256000000,9.19,9.725,9.107,9.266,2237995.75],[1418342400000,9.253,9.461,9.1,9.28,1643909.12],[1418601600000,9.149,9.149,8.815,9.03,1800936.62],[1418688000000,8.975,9.593,8.933,9.593,2469073],[1418774400000,9.6,10.482,9.461,10.266,4400166]]}
                          ]}}])

(defn items-page []
  (fn []
    [:div.columns
     [:div.column>div.dropdown.is-active>div.dropdown-menu>div.dropdown-content
      [:div.field.dropdown-item>div.control.has-icons-left
       [:input.input.is-transparent
        {:placeholder "Your items"}]
       [:span.icon.is-left>i.fa.fa-search]]
      [:hr.dropdown-divider]
      [:a.dropdown-item "item1"]
      [:a.dropdown-item "item2"]]
     [:div.column
      [pingan-chart]]
     [:div.column.span.main
      [:h1 "The items of vtrade"]
      [:ul (map (fn [item-id]
                  [:li {:name (str "item-" item-id) :key (str "item-" item-id)}
                   [:a {:href (path-for :item {:item-id item-id})} "Item: " item-id]])
                (range 1 60))]]]))


(defn item-page []
  (fn []
    (let [routing-data (session/get :route)
          item (get-in routing-data [:route-params :item-id])]
      [:span.main
       [:h1 (str "Item " item " of vtrade")]
       [:p [:a {:href (path-for :items)} "Back to the list of items"]]])))


(defn about-page []
  (fn [] [:span.main
          [:h1 "About vtrade"]]))


;; -------------------------
;; Translate routes -> page components

(defn page-for [route]
  (case route
    :index #'home-page
    :about #'about-page
    :items #'items-page
    :item #'item-page))


;; -------------------------
;; Page mounting component

(defn current-page []
  (fn []
    (let [page (:current-page (session/get :route))]
      [:div
       [:header
        [:p [:a {:href (path-for :index)} "Home"] " | "
         [:a {:href (path-for :about)} "About vtrade"]]]
       [page]
       [:footer
        [:p "vtrade was generated by the "
         [:a {:href "https://github.com/reagent-project/reagent-template"} "Reagent Template"] "."]]])))

;; -------------------------
;; Initialize app

(defn mount-root []
  (rdom/render [current-page] (.getElementById js/document "app")))

(defn init []
  (clerk/initialize!)
  (accountant/configure-navigation!
   {:nav-handler
    (fn [path]
      (let [match (reitit/match-by-path router path)
            current-page (:name (:data  match))
            route-params (:path-params match)]
        (reagent/after-render clerk/after-render!)
        (session/put! :route {:current-page (page-for current-page)
                              :route-params route-params})
        (clerk/navigate-page! path)
        ))
    :path-exists?
    (fn [path]
      (boolean (reitit/match-by-path router path)))})
  (accountant/dispatch-current!)
  (mount-root))
